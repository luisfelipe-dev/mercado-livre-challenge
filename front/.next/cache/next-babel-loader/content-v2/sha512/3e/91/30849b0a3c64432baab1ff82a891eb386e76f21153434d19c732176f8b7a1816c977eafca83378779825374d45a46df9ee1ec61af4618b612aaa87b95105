{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/luisfelipe/Desktop/Projetos/ML-FRONT/front/src/pages/items/index.tsx\";\nimport Head from 'next/head';\nimport { useEffect, useContext } from 'react';\nimport { searchProduct } from 'services/api';\nimport IndexPage from 'templates/IndexPage';\nimport Header from 'components/Header';\nimport { LoadingContext } from 'context/loadingContext';\n\nfunction Items({\n  query\n}) {\n  const loadingContext = useContext(LoadingContext);\n  const {\n    loadingState,\n    products,\n    productsState,\n    valueSearch,\n    breadcrumb,\n    setBreadcrumb\n  } = loadingContext;\n  const [, setLoading] = loadingState;\n  useEffect(() => {\n    if (valueSearch === '') {\n      setLoading(true);\n      searchProduct(query).then(res => {\n        setTimeout(() => setLoading(false), 1000);\n        productsState[1](res.products);\n        setBreadcrumb(res.categories);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Mercado Livre Brasil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      query: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IndexPage, {\n      products: products,\n      breadcrumb: breadcrumb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nItems.getInitialProps = async ctx => {\n  const {\n    req,\n    res,\n    query\n  } = ctx;\n  return {\n    query: query.q\n  };\n};\n\nexport default Items;","map":{"version":3,"sources":["/Users/luisfelipe/Desktop/Projetos/ML-FRONT/front/src/pages/items/index.tsx"],"names":["Head","useEffect","useContext","searchProduct","IndexPage","Header","LoadingContext","Items","query","loadingContext","loadingState","products","productsState","valueSearch","breadcrumb","setBreadcrumb","setLoading","then","res","setTimeout","categories","getInitialProps","ctx","req","q"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAA8BC,UAA9B,QAAgD,OAAhD;AAEA,SAASC,aAAT,QAA8B,cAA9B;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACxB,QAAMC,cAAc,GAAGP,UAAU,CAACI,cAAD,CAAjC;AACA,QAAM;AACJI,IAAAA,YADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA;AANI,MAOFN,cAPJ;AASA,QAAM,GAAGO,UAAH,IAAiBN,YAAvB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,WAAW,KAAK,EAApB,EAAwB;AACtBG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAb,MAAAA,aAAa,CAACK,KAAD,CAAb,CAAqBS,IAArB,CAA2BC,GAAD,IAAS;AACjCC,QAAAA,UAAU,CAAC,MAAMH,UAAU,CAAC,KAAD,CAAjB,EAA0B,IAA1B,CAAV;AACAJ,QAAAA,aAAa,CAAC,CAAD,CAAb,CAAiBM,GAAG,CAACP,QAArB;AACAI,QAAAA,aAAa,CAACG,GAAG,CAACE,UAAL,CAAb;AACD,OAJD;AAKD;AACF,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEZ;AAAf;AAAA;AAAA;AAAA;AAAA,YALF,eAOE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEG,QAArB;AAA+B,MAAA,UAAU,EAAEG;AAA3C;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD;;AAEDP,KAAK,CAACc,eAAN,GAAwB,MAAOC,GAAP,IAAe;AACrC,QAAM;AAAEC,IAAAA,GAAF;AAAOL,IAAAA,GAAP;AAAYV,IAAAA;AAAZ,MAAsBc,GAA5B;AAEA,SAAO;AAAEd,IAAAA,KAAK,EAAEA,KAAK,CAACgB;AAAf,GAAP;AACD,CAJD;;AAMA,eAAejB,KAAf","sourcesContent":["import Head from 'next/head';\nimport { useEffect, useState, useContext } from 'react';\n\nimport { searchProduct } from 'services/api';\n\nimport IndexPage from 'templates/IndexPage';\nimport Header from 'components/Header';\n\nimport { LoadingContext } from 'context/loadingContext';\n\nfunction Items({ query }) {\n  const loadingContext = useContext(LoadingContext);\n  const {\n    loadingState,\n    products,\n    productsState,\n    valueSearch,\n    breadcrumb,\n    setBreadcrumb,\n  } = loadingContext;\n\n  const [, setLoading] = loadingState;\n\n  useEffect(() => {\n    if (valueSearch === '') {\n      setLoading(true);\n      searchProduct(query).then((res) => {\n        setTimeout(() => setLoading(false), 1000);\n        productsState[1](res.products);\n        setBreadcrumb(res.categories);\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Mercado Livre Brasil</title>\n      </Head>\n\n      <Header query={query} />\n\n      <IndexPage products={products} breadcrumb={breadcrumb} />\n    </>\n  );\n}\n\nItems.getInitialProps = async (ctx) => {\n  const { req, res, query } = ctx;\n\n  return { query: query.q };\n};\n\nexport default Items;\n"]},"metadata":{},"sourceType":"module"}
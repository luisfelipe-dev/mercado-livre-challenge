{"ast":null,"code":"import _regeneratorRuntime from \"/Users/luisfelipe/Desktop/Projetos/ML-FRONT/front/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/luisfelipe/Desktop/Projetos/ML-FRONT/front/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/luisfelipe/Desktop/Projetos/ML-FRONT/front/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/luisfelipe/Desktop/Projetos/ML-FRONT/front/src/pages/items/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Head from 'next/head';\nimport { useEffect, useContext } from 'react';\nimport { searchProduct } from 'services/api';\nimport IndexPage from 'templates/IndexPage';\nimport Header from 'components/Header';\nimport { LoadingContext } from 'context/loadingContext';\n\nfunction Items(_ref) {\n  _s();\n\n  var query = _ref.query;\n  var loadingContext = useContext(LoadingContext);\n  var loadingState = loadingContext.loadingState,\n      products = loadingContext.products,\n      productsState = loadingContext.productsState,\n      valueSearch = loadingContext.valueSearch,\n      breadcrumb = loadingContext.breadcrumb,\n      setBreadcrumb = loadingContext.setBreadcrumb;\n\n  var _loadingState = _slicedToArray(loadingState, 2),\n      setLoading = _loadingState[1];\n\n  useEffect(function () {\n    if (valueSearch === '') {\n      setLoading(true);\n      searchProduct(query).then(function (res) {\n        setTimeout(function () {\n          return setLoading(false);\n        }, 1000);\n        productsState[1](res.products);\n        setBreadcrumb(res.categories);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Mercado Livre Brasil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      query: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IndexPage, {\n      products: products,\n      breadcrumb: breadcrumb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Items, \"FAI2wcWIkKF5aZOag6NkJm1vABo=\");\n\n_c = Items;\n\nItems.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var req, res, query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = ctx.req, res = ctx.res, query = ctx.query;\n            return _context.abrupt(\"return\", {\n              query: query.q\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["/Users/luisfelipe/Desktop/Projetos/ML-FRONT/front/src/pages/items/index.tsx"],"names":["Head","useEffect","useContext","searchProduct","IndexPage","Header","LoadingContext","Items","query","loadingContext","loadingState","products","productsState","valueSearch","breadcrumb","setBreadcrumb","setLoading","then","res","setTimeout","categories","getInitialProps","ctx","req","q"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAA8BC,UAA9B,QAAgD,OAAhD;AAEA,SAASC,aAAT,QAA8B,cAA9B;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,SAASC,KAAT,OAA0B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AACxB,MAAMC,cAAc,GAAGP,UAAU,CAACI,cAAD,CAAjC;AADwB,MAGtBI,YAHsB,GASpBD,cAToB,CAGtBC,YAHsB;AAAA,MAItBC,QAJsB,GASpBF,cAToB,CAItBE,QAJsB;AAAA,MAKtBC,aALsB,GASpBH,cAToB,CAKtBG,aALsB;AAAA,MAMtBC,WANsB,GASpBJ,cAToB,CAMtBI,WANsB;AAAA,MAOtBC,UAPsB,GASpBL,cAToB,CAOtBK,UAPsB;AAAA,MAQtBC,aARsB,GASpBN,cAToB,CAQtBM,aARsB;;AAAA,qCAWDL,YAXC;AAAA,MAWfM,UAXe;;AAaxBf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIY,WAAW,KAAK,EAApB,EAAwB;AACtBG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAb,MAAAA,aAAa,CAACK,KAAD,CAAb,CAAqBS,IAArB,CAA0B,UAACC,GAAD,EAAS;AACjCC,QAAAA,UAAU,CAAC;AAAA,iBAAMH,UAAU,CAAC,KAAD,CAAhB;AAAA,SAAD,EAA0B,IAA1B,CAAV;AACAJ,QAAAA,aAAa,CAAC,CAAD,CAAb,CAAiBM,GAAG,CAACP,QAArB;AACAI,QAAAA,aAAa,CAACG,GAAG,CAACE,UAAL,CAAb;AACD,OAJD;AAKD;AACF,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEZ;AAAf;AAAA;AAAA;AAAA;AAAA,YALF,eAOE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEG,QAArB;AAA+B,MAAA,UAAU,EAAEG;AAA3C;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD;;GAnCQP,K;;KAAAA,K;;AAqCTA,KAAK,CAACc,eAAN;AAAA,uEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,GADc,GACMD,GADN,CACdC,GADc,EACTL,GADS,GACMI,GADN,CACTJ,GADS,EACJV,KADI,GACMc,GADN,CACJd,KADI;AAAA,6CAGf;AAAEA,cAAAA,KAAK,EAAEA,KAAK,CAACgB;AAAf,aAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAejB,KAAf","sourcesContent":["import Head from 'next/head';\nimport { useEffect, useState, useContext } from 'react';\n\nimport { searchProduct } from 'services/api';\n\nimport IndexPage from 'templates/IndexPage';\nimport Header from 'components/Header';\n\nimport { LoadingContext } from 'context/loadingContext';\n\nfunction Items({ query }) {\n  const loadingContext = useContext(LoadingContext);\n  const {\n    loadingState,\n    products,\n    productsState,\n    valueSearch,\n    breadcrumb,\n    setBreadcrumb,\n  } = loadingContext;\n\n  const [, setLoading] = loadingState;\n\n  useEffect(() => {\n    if (valueSearch === '') {\n      setLoading(true);\n      searchProduct(query).then((res) => {\n        setTimeout(() => setLoading(false), 1000);\n        productsState[1](res.products);\n        setBreadcrumb(res.categories);\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Mercado Livre Brasil</title>\n      </Head>\n\n      <Header query={query} />\n\n      <IndexPage products={products} breadcrumb={breadcrumb} />\n    </>\n  );\n}\n\nItems.getInitialProps = async (ctx) => {\n  const { req, res, query } = ctx;\n\n  return { query: query.q };\n};\n\nexport default Items;\n"]},"metadata":{},"sourceType":"module"}
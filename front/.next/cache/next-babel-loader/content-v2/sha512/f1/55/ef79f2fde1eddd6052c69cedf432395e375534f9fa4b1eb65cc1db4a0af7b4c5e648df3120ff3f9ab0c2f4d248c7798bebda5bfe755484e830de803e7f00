{"ast":null,"code":"import _regeneratorRuntime from \"/Users/luisfelipe/Desktop/Projetos/ML-FRONT/front/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/luisfelipe/Desktop/Projetos/ML-FRONT/front/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport var api = axios.create({\n  baseURL: 'http://localhost:3001/api'\n}); //localhost:3001/api/items?q=iphone\n\nexport var searchProduct = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(q) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.get(\"/items?q=\".concat(q)).then(function (res) {\n              var _res$data = res.data,\n                  author = _res$data.author,\n                  categories = _res$data.categories,\n                  items = _res$data.items;\n              var products = items.splice(0, 6);\n              return {\n                author: author,\n                categories: categories,\n                products: products\n              };\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function searchProduct(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var infosProduct = function infosProduct(id) {\n  return api.get(\"/item/\".concat(id)).then(function (res) {\n    return res.data;\n  });\n};\nexport var suggestionProduct = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(q) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"https://api.mercadolibre.com/sites/MLA/autosuggest?showFilters=true&limit=6&api_version=2&q=\".concat(q)).then(function (res) {\n              return res.data.suggested_queries;\n            })[\"catch\"](function () {\n              return [];\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function suggestionProduct(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/luisfelipe/Desktop/Projetos/ML-FRONT/front/src/services/api.ts"],"names":["axios","api","create","baseURL","searchProduct","q","get","then","res","data","author","categories","items","products","splice","infosProduct","id","suggestionProduct","suggested_queries"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC9BC,EAAAA,OAAO,EAAE;AADqB,CAAb,CAAZ,C,CAIP;;AAEA,OAAO,IAAMC,aAAa;AAAA,sEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACrBJ,GAAG,CAACK,GAAJ,oBAAoBD,CAApB,GAAyBE,IAAzB,CAA8B,UAACC,GAAD,EAAS;AAAA,8BACLA,GAAG,CAACC,IADC;AAAA,kBACnCC,MADmC,aACnCA,MADmC;AAAA,kBAC3BC,UAD2B,aAC3BA,UAD2B;AAAA,kBACfC,KADe,aACfA,KADe;AAG3C,kBAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAjB;AAEA,qBAAO;AAAEJ,gBAAAA,MAAM,EAANA,MAAF;AAAUC,gBAAAA,UAAU,EAAVA,UAAV;AAAsBE,gBAAAA,QAAQ,EAARA;AAAtB,eAAP;AACD,aANK,CADqB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbT,aAAa;AAAA;AAAA;AAAA,GAAnB;AASP,OAAO,IAAMW,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAAQ;AAClC,SAAOf,GAAG,CAACK,GAAJ,iBAAiBU,EAAjB,GAAuBT,IAAvB,CAA4B,UAACC,GAAD,EAAS;AAC1C,WAAOA,GAAG,CAACC,IAAX;AACD,GAFM,CAAP;AAGD,CAJM;AAMP,OAAO,IAAMQ,iBAAiB;AAAA,uEAAG,kBAAOZ,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzBL,KAAK,CACRM,GADG,uGAE6FD,CAF7F,GAIHE,IAJG,CAIE,UAACC,GAAD,EAAS;AACb,qBAAOA,GAAG,CAACC,IAAJ,CAASS,iBAAhB;AACD,aANG,WAOG,YAAM;AACX,qBAAO,EAAP;AACD,aATG,CADyB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBD,iBAAiB;AAAA;AAAA;AAAA,GAAvB","sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:3001/api',\n});\n\n//localhost:3001/api/items?q=iphone\n\nexport const searchProduct = async (q) =>\n  await api.get(`/items?q=${q}`).then((res) => {\n    const { author, categories, items } = res.data;\n\n    const products = items.splice(0, 6);\n\n    return { author, categories, products };\n  });\n\nexport const infosProduct = (id) => {\n  return api.get(`/item/${id}`).then((res) => {\n    return res.data;\n  });\n};\n\nexport const suggestionProduct = async (q) =>\n  await axios\n    .get(\n      `https://api.mercadolibre.com/sites/MLA/autosuggest?showFilters=true&limit=6&api_version=2&q=${q}`\n    )\n    .then((res) => {\n      return res.data.suggested_queries;\n    })\n    .catch(() => {\n      return [];\n    });\n"]},"metadata":{},"sourceType":"module"}